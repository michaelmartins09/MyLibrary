import 'package:flutter/material.dart';
import 'package:minha_livraria/helper/api.dart';
import 'package:minha_livraria/model/AutoGenerated.dart';
import 'package:minha_livraria/pages/view_page.dart';

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int indexSearch = 0;
  List<Items> listItems = [];
  List<String> listParms = [
    "Flutter", "Google", "Microsoft", "Facebook", "Orkut"
  ];

  List<LinearGradient> listGradient = [
    LinearGradient(colors: [Colors.blue[900], Colors.blue[200]]),
    LinearGradient(colors: [Colors.purple[900], Colors.deepPurple]),
    LinearGradient(colors: [Colors.yellow[900], Colors.yellow]),
    LinearGradient(colors: [Colors.red[900], Colors.red]),
    LinearGradient(colors: [Colors.green[900], Colors.green]),
  ];

  @override
  void initState() {
    super.initState();
  }

  Future<List<Items>> getItems() async {
    Api api;
    api = Api();
    return await api.search(listParms[indexSearch]);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blueGrey[50],
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 3,
        title: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text("MINHA LIVRARIA", style: TextStyle(color: Colors.black54, fontWeight: FontWeight.bold)),
            Text(listParms[indexSearch], style: TextStyle(color: Colors.grey, fontSize: 12)),
          ],
        ),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Container(
          width: MediaQuery.of(context).size.width,
          child: Column(
            children: <Widget>[
              Padding(
                padding: const EdgeInsets.only(top: 20, left: 20, bottom: 20),
                child: Container(
                  height: 100,
                  child: ListView.builder(
                    itemCount: listParms.length,
                    scrollDirection: Axis.horizontal,
                    shrinkWrap: true,
                    itemBuilder: (context, index){
                      return GestureDetector(
                        onTap: (){
                          setState(() { indexSearch = index; });
                        },
                        child: Padding(
                          padding: const EdgeInsets.only(right: 20),
                          child: Container(
                            width: 80,
                            height: 80,
                            decoration: BoxDecoration(
                              gradient: listGradient[index],
                              boxShadow: [
                                BoxShadow(
                                  blurRadius: 10,
                                  color: Colors.black12,
                                )
                              ],
                              borderRadius: BorderRadius.circular(8)
                            ),
                            child: Center(
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: <Widget>[
                                  Icon(Icons.local_library, color: Colors.white, size: 30),
                                  Text(listParms[index], style: TextStyle(color: Colors.white), textAlign: TextAlign.center,),
                                ],
                              ),
                            ),
                          ),
                        ),
                      );
                    },
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(20),
                child: Column(
                  children: <Widget>[
                    Align(alignment: Alignment.centerLeft, child: Text("Resultado", style: TextStyle(color: Colors.black87, fontWeight: FontWeight.bold))),
                    Padding(
                      padding: EdgeInsets.only(top: 10),
                      child: FutureBuilder<List<Items>>(
                        future: getItems(),
                        builder: (BuildContext context, AsyncSnapshot<List<Items>> snapshot){
                          if (snapshot.data == null){
                            return Center(child: CircularProgressIndicator());
                          } else if (snapshot.data.isEmpty) {
                            return Center(child: Text("Nenhum resultado encontrado para "+listParms[indexSearch]));
                          } else {
                            // return Center(child: Text(snapshot.data[0].volumeInfo.title));
                            return SingleChildScrollView(
                              child: Container(
                                width: double.maxFinite,
                                child: ListView.builder(
                                  scrollDirection: Axis.vertical,
                                  shrinkWrap: true,
                                  itemCount: snapshot.data.length,
                                  itemBuilder: (context, index){
                                    return Card(
                                      child: Padding(
                                        padding: EdgeInsets.all(5),
                                        child: ListTile(
                                          leading: Container(
                                            width: 3,
                                            decoration: BoxDecoration(
                                              gradient: listGradient[indexSearch],
                                              borderRadius: BorderRadius.circular(3)
                                            ),
                                          ),
                                          title: Text(snapshot.data[index].volumeInfo.title),
                                          subtitle: Text(snapshot.data[index].volumeInfo.authors[0]),
                                          trailing: IconButton(
                                            onPressed: (){
                                              Navigator.push(context, MaterialPageRoute(
                                                builder: (context) => ViewPage(volumeInfo: snapshot.data[index].volumeInfo)
                                              ));
                                            },
                                            icon: Icon(Icons.keyboard_arrow_right),
                                          ),
                                        ),
                                      ),
                                    );
                                  },
                                ),
                              ),
                            );
                          }
                        }
                      )
                    )
                  ],
                ),
              )
            ],
          ),
        ),
      ),
    );
  }
}